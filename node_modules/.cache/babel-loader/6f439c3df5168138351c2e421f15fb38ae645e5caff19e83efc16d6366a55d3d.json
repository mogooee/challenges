{"ast":null,"code":"import{ANIMATION,COLORS,SIZE}from'../../constants/producing-chart';const drawBarChart=(canvas,data,animationId)=>{const labels=Object.keys(data);const ratios=Object.values(data);const maxY=Math.max(...ratios);const n=labels.length;const perWidth=SIZE.CANVAS.WIDTH/n;let x=perWidth/2/2;const drawXAxis=(x,y)=>{canvas.moveTo(0,y);canvas.lineTo(x,y);canvas.stroke();};const drawText=(text,x,y)=>{const stringHalfLen=(SIZE.BAR_CHART.BAR_WIDTH-canvas.measureText(text).width)/2;canvas.font='14px serif';canvas.fillStyle='black';canvas.fillText(text,x+stringHalfLen,y);};const drawBar=(index,x,y,height,color)=>{let movingHeight=0;const animation=()=>{canvas.beginPath();canvas.rect(x,y,SIZE.BAR_CHART.BAR_WIDTH,-movingHeight);canvas.fillStyle=color;canvas.fill();if(movingHeight===height){cancelAnimationFrame(animationId.current[index]);return;}movingHeight=movingHeight<height?movingHeight+ANIMATION.BAR_CHART_MOVING_HEIGHT:height;animationId.current[index]=requestAnimationFrame(animation);};animation();};ratios.forEach((ratio,i)=>{const perHeight=(SIZE.BAR_CHART.Y_AXIS-SIZE.BAR_CHART.CHART_Y)/maxY;const barHeight=perHeight*ratio;canvas.beginPath();drawXAxis(SIZE.CANVAS.WIDTH,SIZE.BAR_CHART.Y_AXIS);drawBar(i,x,SIZE.BAR_CHART.Y_AXIS,barHeight,COLORS[i]);drawText(String(ratio),x,SIZE.BAR_CHART.Y_AXIS-barHeight-SIZE.BAR_CHART.OFFSET_VALUE);drawText(labels[i],x,SIZE.CANVAS.HEIGHT-SIZE.BAR_CHART.LABELS_HEIGHT);x+=perWidth;});};export default drawBarChart;","map":{"version":3,"names":["ANIMATION","COLORS","SIZE","drawBarChart","canvas","data","animationId","labels","Object","keys","ratios","values","maxY","Math","max","n","length","perWidth","CANVAS","WIDTH","x","drawXAxis","y","moveTo","lineTo","stroke","drawText","text","stringHalfLen","BAR_CHART","BAR_WIDTH","measureText","width","font","fillStyle","fillText","drawBar","index","height","color","movingHeight","animation","beginPath","rect","fill","cancelAnimationFrame","current","BAR_CHART_MOVING_HEIGHT","requestAnimationFrame","forEach","ratio","i","perHeight","Y_AXIS","CHART_Y","barHeight","String","OFFSET_VALUE","HEIGHT","LABELS_HEIGHT"],"sources":["/home/runner/work/challenges/challenges/src/utils/producing-chart/drawBarChart.ts"],"sourcesContent":["import { ChartDataType } from '../../components/producing-chart/ChartMaker';\nimport { ANIMATION, COLORS, SIZE } from '../../constants/producing-chart';\n\nconst drawBarChart = (\n  canvas: CanvasRenderingContext2D,\n  data: ChartDataType,\n  animationId: React.MutableRefObject<number[]>,\n) => {\n  const labels: string[] = Object.keys(data);\n  const ratios: number[] = Object.values(data);\n  const maxY = Math.max(...ratios);\n  const n = labels.length;\n  const perWidth = SIZE.CANVAS.WIDTH / n;\n  let x = perWidth / 2 / 2;\n\n  const drawXAxis = (x: number, y: number) => {\n    canvas.moveTo(0, y);\n    canvas.lineTo(x, y);\n    canvas.stroke();\n  };\n\n  const drawText = (text: string, x: number, y: number) => {\n    const stringHalfLen = (SIZE.BAR_CHART.BAR_WIDTH - canvas.measureText(text).width) / 2;\n    canvas.font = '14px serif';\n    canvas.fillStyle = 'black';\n    canvas.fillText(text, x + stringHalfLen, y);\n  };\n\n  const drawBar = (index: number, x: number, y: number, height: number, color: string) => {\n    let movingHeight = 0;\n\n    const animation = () => {\n      canvas.beginPath();\n      canvas.rect(x, y, SIZE.BAR_CHART.BAR_WIDTH, -movingHeight);\n      canvas.fillStyle = color;\n      canvas.fill();\n\n      if (movingHeight === height) {\n        cancelAnimationFrame(animationId.current[index]);\n        return;\n      }\n\n      movingHeight = movingHeight < height ? movingHeight + ANIMATION.BAR_CHART_MOVING_HEIGHT : height;\n      animationId.current[index] = requestAnimationFrame(animation);\n    };\n\n    animation();\n  };\n\n  ratios.forEach((ratio, i) => {\n    const perHeight = (SIZE.BAR_CHART.Y_AXIS - SIZE.BAR_CHART.CHART_Y) / maxY;\n    const barHeight = perHeight * ratio;\n\n    canvas.beginPath();\n    drawXAxis(SIZE.CANVAS.WIDTH, SIZE.BAR_CHART.Y_AXIS);\n    drawBar(i, x, SIZE.BAR_CHART.Y_AXIS, barHeight, COLORS[i]);\n    drawText(String(ratio), x, SIZE.BAR_CHART.Y_AXIS - barHeight - SIZE.BAR_CHART.OFFSET_VALUE);\n    drawText(labels[i], x, SIZE.CANVAS.HEIGHT - SIZE.BAR_CHART.LABELS_HEIGHT);\n\n    x += perWidth;\n  });\n};\n\nexport default drawBarChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}