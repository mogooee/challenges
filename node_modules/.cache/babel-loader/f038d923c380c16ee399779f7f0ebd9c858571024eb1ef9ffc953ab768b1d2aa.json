{"ast":null,"code":"import{useState}from'react';import{SIZE}from'../../constants/post-it';const inRange=(pos,min,max)=>{if(pos<min)return min;if(pos>max)return max;return pos;};const getBaordRange=boardElement=>{const{top,left,right,bottom}=boardElement.getBoundingClientRect();const x={min:left+SIZE.MEMOBOARD.PADDING,max:right-SIZE.MEMOBOARD.PADDING};const y={min:top+SIZE.MEMOBOARD.PADDING,max:bottom-10};return{x,y};};const getTargetRange=(targetElement,boardRange)=>{const{top,left}=targetElement.getBoundingClientRect();const x={min:boardRange.x.min-left,max:boardRange.x.max-left-SIZE.POSTIT.WIDTH};const y={min:boardRange.y.min-top,max:boardRange.y.max-top-SIZE.POSTIT.HEIGHT};return{x,y};};const INIT_POS={x:0,y:0};const INIT_RANGE={x:{min:0,max:0},y:{min:0,max:0}};const useDragAndDrop=setNewPos=>{const[targetElement,setTargetElement]=useState();const[originPos,setOriginPos]=useState(INIT_POS);const[moveRange,setMoveRange]=useState(INIT_RANGE);const[deltaPos,setDeltaPos]=useState(INIT_POS);const dragStart=_ref=>{let{target,currentTarget,dataTransfer,screenX,screenY}=_ref;dataTransfer.effectAllowed='move';const img=new Image();dataTransfer.setDragImage(img,0,0);setOriginPos({x:screenX,y:screenY});const boardRange=getBaordRange(currentTarget);const{x,y}=getTargetRange(target,boardRange);setMoveRange({x,y});setTargetElement(target);};const drag=_ref2=>{let{screenX,screenY}=_ref2;if(!screenX&&!screenY)return;const[dx,dy]=[screenX-originPos.x,screenY-originPos.y];const movingX=inRange(dx,moveRange.x.min,moveRange.x.max);const movingY=inRange(dy,moveRange.y.min,moveRange.y.max);targetElement.style.transform=\"translateX(\".concat(movingX,\"px) translateY(\").concat(movingY,\"px)\");targetElement.style.cursor='grabbing';};const dragOver=e=>{e.preventDefault();};const dragLeave=()=>{setDeltaPos(INIT_POS);};const drop=()=>{const numRegex=/[^-?0-9]/g;const transform=targetElement===null||targetElement===void 0?void 0:targetElement.style.transform;if(!transform)return;const[translateX,translateY]=transform.split(' ');const deltaPos={x:Number(translateX.replace(numRegex,'')),y:Number(translateY.replace(numRegex,''))};setDeltaPos(deltaPos);};const dragEnd=()=>{setNewPos(targetElement,deltaPos);targetElement.style.cursor='grab';targetElement.style.transform='';};return{dragStart,drag,dragOver,dragLeave,drop,dragEnd};};export default useDragAndDrop;","map":{"version":3,"names":["useState","SIZE","inRange","pos","min","max","getBaordRange","boardElement","top","left","right","bottom","getBoundingClientRect","x","MEMOBOARD","PADDING","y","getTargetRange","targetElement","boardRange","POSTIT","WIDTH","HEIGHT","INIT_POS","INIT_RANGE","useDragAndDrop","setNewPos","setTargetElement","originPos","setOriginPos","moveRange","setMoveRange","deltaPos","setDeltaPos","dragStart","_ref","target","currentTarget","dataTransfer","screenX","screenY","effectAllowed","img","Image","setDragImage","drag","_ref2","dx","dy","movingX","movingY","style","transform","concat","cursor","dragOver","e","preventDefault","dragLeave","drop","numRegex","translateX","translateY","split","Number","replace","dragEnd"],"sources":["/home/runner/work/challenges/challenges/src/hooks/post-it/useDragAndDrop.ts"],"sourcesContent":["import { useState } from 'react';\nimport { SIZE } from '../../constants/post-it';\n\nexport interface Position {\n  x: number;\n  y: number;\n}\ninterface Range {\n  min: number;\n  max: number;\n}\ninterface RangePosition {\n  x: Range;\n  y: Range;\n}\ntype DragStart = Pick<\n  React.DragEvent<HTMLElement>,\n  'target' | 'currentTarget' | 'dataTransfer' | 'screenX' | 'screenY'\n>;\ntype Drag = Pick<DragStart, 'screenX' | 'screenY'>;\n\nconst inRange = (pos: number, min: number, max: number): number => {\n  if (pos < min) return min;\n  if (pos > max) return max;\n  return pos;\n};\n\nconst getBaordRange = (boardElement: HTMLElement): RangePosition => {\n  const { top, left, right, bottom } = boardElement.getBoundingClientRect();\n  const x = {\n    min: left + SIZE.MEMOBOARD.PADDING,\n    max: right - SIZE.MEMOBOARD.PADDING,\n  };\n  const y = { min: top + SIZE.MEMOBOARD.PADDING, max: bottom - 10 };\n  return { x, y };\n};\n\nconst getTargetRange = (targetElement: HTMLElement, boardRange: RangePosition) => {\n  const { top, left } = targetElement.getBoundingClientRect();\n  const x = {\n    min: boardRange.x.min - left,\n    max: boardRange.x.max - left - SIZE.POSTIT.WIDTH,\n  };\n  const y = {\n    min: boardRange.y.min - top,\n    max: boardRange.y.max - top - SIZE.POSTIT.HEIGHT,\n  };\n  return { x, y };\n};\n\nconst INIT_POS = { x: 0, y: 0 };\nconst INIT_RANGE = {\n  x: { min: 0, max: 0 },\n  y: { min: 0, max: 0 },\n};\n\nconst useDragAndDrop = (setNewPos: (target: HTMLElement, deltaPos: Position) => void) => {\n  const [targetElement, setTargetElement] = useState<HTMLElement>();\n  const [originPos, setOriginPos] = useState<Position>(INIT_POS);\n  const [moveRange, setMoveRange] = useState<RangePosition>(INIT_RANGE);\n  const [deltaPos, setDeltaPos] = useState<Position>(INIT_POS);\n\n  const dragStart = ({ target, currentTarget, dataTransfer, screenX, screenY }: DragStart) => {\n    dataTransfer.effectAllowed = 'move';\n    const img = new Image();\n    dataTransfer.setDragImage(img, 0, 0);\n    setOriginPos({ x: screenX, y: screenY });\n    const boardRange = getBaordRange(currentTarget);\n    const { x, y } = getTargetRange(target as HTMLElement, boardRange);\n    setMoveRange({ x, y });\n    setTargetElement(target as HTMLElement);\n  };\n\n  const drag = ({ screenX, screenY }: Drag) => {\n    if (!screenX && !screenY) return;\n    const [dx, dy] = [screenX - originPos.x, screenY - originPos.y];\n    const movingX = inRange(dx, moveRange.x.min, moveRange.x.max);\n    const movingY = inRange(dy, moveRange.y.min, moveRange.y.max);\n    targetElement!.style.transform = `translateX(${movingX}px) translateY(${movingY}px)`;\n    targetElement!.style.cursor = 'grabbing';\n  };\n\n  const dragOver = (e: React.DragEvent) => {\n    e.preventDefault();\n  };\n\n  const dragLeave = () => {\n    setDeltaPos(INIT_POS);\n  };\n\n  const drop = () => {\n    const numRegex = /[^-?0-9]/g;\n    const transform = targetElement?.style.transform;\n    if (!transform) return;\n    const [translateX, translateY] = transform.split(' ');\n    const deltaPos = {\n      x: Number(translateX.replace(numRegex, '')),\n      y: Number(translateY.replace(numRegex, '')),\n    };\n    setDeltaPos(deltaPos);\n  };\n\n  const dragEnd = () => {\n    setNewPos(targetElement!, deltaPos);\n    targetElement!.style.cursor = 'grab';\n    targetElement!.style.transform = '';\n  };\n\n  return { dragStart, drag, dragOver, dragLeave, drop, dragEnd };\n};\n\nexport default useDragAndDrop;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}