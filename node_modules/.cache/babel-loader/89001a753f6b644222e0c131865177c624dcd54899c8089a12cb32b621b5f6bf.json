{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/runner/work/challenges/challenges/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3;import React from'react';import{styled}from'styled-components';import{COLORS}from'../../constants/post-it';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const StyledColorPicker=styled.details(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  position: relative;\\n\\n  div,\\n  li {\\n    width: 14px;\\n    height: 14px;\\n    border: 1px solid black;\\n    border-radius: 3px;\\n    list-style: none;\\n    cursor: pointer;\\n  }\\n\\n  &[open] > summary::before {\\n    position: fixed;\\n    top: 0;\\n    right: 0;\\n    bottom: 0;\\n    left: 0;\\n    z-index: 100;\\n    display: block;\\n    cursor: default;\\n    content: ' ';\\n    background: transparent;\\n  }\\n\"])));const PickedColor=styled.summary(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: block;\\n\"])));const ColorList=styled.menu(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: repeat(3, 1fr);\\n  gap: 4px;\\n  width: fit-content;\\n  padding: 8px;\\n  margin: 10px 0;\\n  border: 1px solid black;\\n  border-radius: 4px;\\n  position: absolute;\\n  top: 10px;\\n  z-index: 101;\\n  background-color: white;\\n\"])));const ColorPicker=_ref=>{let{color,setColor}=_ref;const handleColorClick=_ref2=>{let{target}=_ref2;const selectedColor=target.style.backgroundColor;setColor(selectedColor);};return/*#__PURE__*/_jsxs(StyledColorPicker,{children:[/*#__PURE__*/_jsx(PickedColor,{children:/*#__PURE__*/_jsx(\"div\",{style:{backgroundColor:color}})}),/*#__PURE__*/_jsx(ColorList,{children:COLORS.map(e=>/*#__PURE__*/_jsx(\"li\",{style:{backgroundColor:e},onClick:handleColorClick},e))})]});};export default ColorPicker;","map":{"version":3,"names":["React","styled","COLORS","jsx","_jsx","jsxs","_jsxs","StyledColorPicker","details","_templateObject","_taggedTemplateLiteral","PickedColor","summary","_templateObject2","ColorList","menu","_templateObject3","ColorPicker","_ref","color","setColor","handleColorClick","_ref2","target","selectedColor","style","backgroundColor","children","map","e","onClick"],"sources":["/home/runner/work/challenges/challenges/src/components/post-it/ColorPicker.tsx"],"sourcesContent":["import React from 'react';\nimport { styled } from 'styled-components';\nimport { COLORS } from '../../constants/post-it';\n\nconst StyledColorPicker = styled.details`\n  position: relative;\n\n  div,\n  li {\n    width: 14px;\n    height: 14px;\n    border: 1px solid black;\n    border-radius: 3px;\n    list-style: none;\n    cursor: pointer;\n  }\n\n  &[open] > summary::before {\n    position: fixed;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    z-index: 100;\n    display: block;\n    cursor: default;\n    content: ' ';\n    background: transparent;\n  }\n`;\n\nconst PickedColor = styled.summary`\n  display: block;\n`;\n\nconst ColorList = styled.menu`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 4px;\n  width: fit-content;\n  padding: 8px;\n  margin: 10px 0;\n  border: 1px solid black;\n  border-radius: 4px;\n  position: absolute;\n  top: 10px;\n  z-index: 101;\n  background-color: white;\n`;\n\ninterface ColorPickerProps {\n  color: string;\n  setColor: React.Dispatch<React.SetStateAction<string>>;\n}\n\nconst ColorPicker = ({ color, setColor }: ColorPickerProps) => {\n  const handleColorClick = ({ target }: { target: EventTarget }) => {\n    const selectedColor = (target as HTMLLIElement).style.backgroundColor;\n    setColor(selectedColor!);\n  };\n\n  return (\n    <StyledColorPicker>\n      <PickedColor>\n        <div style={{ backgroundColor: color }}></div>\n      </PickedColor>\n      <ColorList>\n        {COLORS.map((e) => (\n          <li key={e} style={{ backgroundColor: e }} onClick={handleColorClick}></li>\n        ))}\n      </ColorList>\n    </StyledColorPicker>\n  );\n};\n\nexport default ColorPicker;\n"],"mappings":"mMAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,MAAM,KAAQ,mBAAmB,CAC1C,OAASC,MAAM,KAAQ,yBAAyB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEjD,KAAM,CAAAC,iBAAiB,CAAGN,MAAM,CAACO,OAAO,CAAAC,eAAA,GAAAA,eAAA,CAAAC,sBAAA,saAyBvC,CAED,KAAM,CAAAC,WAAW,CAAGV,MAAM,CAACW,OAAO,CAAAC,gBAAA,GAAAA,gBAAA,CAAAH,sBAAA,6BAEjC,CAED,KAAM,CAAAI,SAAS,CAAGb,MAAM,CAACc,IAAI,CAAAC,gBAAA,GAAAA,gBAAA,CAAAN,sBAAA,mRAa5B,CAOD,KAAM,CAAAO,WAAW,CAAGC,IAAA,EAA2C,IAA1C,CAAEC,KAAK,CAAEC,QAA2B,CAAC,CAAAF,IAAA,CACxD,KAAM,CAAAG,gBAAgB,CAAGC,KAAA,EAAyC,IAAxC,CAAEC,MAAgC,CAAC,CAAAD,KAAA,CAC3D,KAAM,CAAAE,aAAa,CAAID,MAAM,CAAmBE,KAAK,CAACC,eAAe,CACrEN,QAAQ,CAACI,aAAc,CAAC,CAC1B,CAAC,CAED,mBACElB,KAAA,CAACC,iBAAiB,EAAAoB,QAAA,eAChBvB,IAAA,CAACO,WAAW,EAAAgB,QAAA,cACVvB,IAAA,QAAKqB,KAAK,CAAE,CAAEC,eAAe,CAAEP,KAAM,CAAE,CAAM,CAAC,CACnC,CAAC,cACdf,IAAA,CAACU,SAAS,EAAAa,QAAA,CACPzB,MAAM,CAAC0B,GAAG,CAAEC,CAAC,eACZzB,IAAA,OAAYqB,KAAK,CAAE,CAAEC,eAAe,CAAEG,CAAE,CAAE,CAACC,OAAO,CAAET,gBAAiB,EAA5DQ,CAAiE,CAC3E,CAAC,CACO,CAAC,EACK,CAAC,CAExB,CAAC,CAED,cAAe,CAAAZ,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}