{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/runner/work/challenges/challenges/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2;import styled from'styled-components';import{SCORE}from'../../constants/producing-chart';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const ScoreTable=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: 1fr 2.5fr;\\n  gap: 20px;\\n\\n  label,\\n  input {\\n    border: 1px solid black;\\n    border-radius: 8px;\\n    padding: 10px;\\n  }\\n\\n  input {\\n    outline: none;\\n    text-align: center;\\n  }\\n\"])));const ControlBox=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: space-evenly;\\n  margin-top: 60px;\\n\\n  button {\\n    border: 1px solid black;\\n    border-radius: 8px;\\n    padding: 15px;\\n    cursor: pointer;\\n    background: inherit;\\n    &:hover {\\n      background: lightGray;\\n    }\\n  }\\n\"])));const isValidScore=score=>{if(score<SCORE.MIN||score>SCORE.MAX)return false;return true;};const Input=_ref=>{let{name,score,setScores}=_ref;const blankMsg='fill in the score';const setScore=event=>{const newScore=Number(event.target.value);if(!isValidScore(newScore))return;setScores(prevScores=>({...prevScores,[name]:newScore}));};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:name,children:name}),/*#__PURE__*/_jsx(\"input\",{id:name,type:\"number\",value:score||'',placeholder:blankMsg,onChange:setScore})]});};const ScoreBoard=_ref2=>{let{scores,resetScores,setScores,setChartOpen}=_ref2;const hasBlankScore=Object.values(scores).filter(score=>score===0).length>0;const openChart=()=>{setChartOpen(true);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(ScoreTable,{children:[/*#__PURE__*/_jsx(\"span\",{children:\"Student\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Score\"}),Object.keys(scores).map(student=>/*#__PURE__*/_jsx(Input,{name:student,score:scores[student],setScores:setScores},student))]}),/*#__PURE__*/_jsxs(ControlBox,{children:[/*#__PURE__*/_jsx(\"button\",{disabled:hasBlankScore,onClick:openChart,children:\"Make Chart\"}),/*#__PURE__*/_jsx(\"button\",{onClick:resetScores,children:\"Reset Data\"})]})]});};export default ScoreBoard;","map":{"version":3,"names":["styled","SCORE","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","ScoreTable","div","_templateObject","_taggedTemplateLiteral","ControlBox","_templateObject2","isValidScore","score","MIN","MAX","Input","_ref","name","setScores","blankMsg","setScore","event","newScore","Number","target","value","prevScores","children","htmlFor","id","type","placeholder","onChange","ScoreBoard","_ref2","scores","resetScores","setChartOpen","hasBlankScore","Object","values","filter","length","openChart","keys","map","student","disabled","onClick"],"sources":["/home/runner/work/challenges/challenges/src/components/producing-chart/ScoreBoard.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { SCORE } from '../../constants/producing-chart';\nimport { ChartDataType } from './ChartMaker';\n\nconst ScoreTable = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 2.5fr;\n  gap: 20px;\n\n  label,\n  input {\n    border: 1px solid black;\n    border-radius: 8px;\n    padding: 10px;\n  }\n\n  input {\n    outline: none;\n    text-align: center;\n  }\n`;\n\nconst ControlBox = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  margin-top: 60px;\n\n  button {\n    border: 1px solid black;\n    border-radius: 8px;\n    padding: 15px;\n    cursor: pointer;\n    background: inherit;\n    &:hover {\n      background: lightGray;\n    }\n  }\n`;\n\ninterface InputType {\n  name: string;\n  score: number;\n  setScores: React.Dispatch<React.SetStateAction<ChartDataType>>;\n}\n\nconst isValidScore = (score: number) => {\n  if (score < SCORE.MIN || score > SCORE.MAX) return false;\n  return true;\n};\n\nconst Input = ({ name, score, setScores }: InputType) => {\n  const blankMsg = 'fill in the score';\n\n  const setScore = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newScore = Number(event.target.value);\n    if (!isValidScore(newScore)) return;\n    setScores((prevScores) => ({ ...prevScores, [name]: newScore }));\n  };\n\n  return (\n    <>\n      <label htmlFor={name}>{name}</label>\n      <input id={name} type=\"number\" value={score || ''} placeholder={blankMsg} onChange={setScore}></input>\n    </>\n  );\n};\n\ninterface ScoreBoardType {\n  scores: ChartDataType;\n  setScores: React.Dispatch<React.SetStateAction<ChartDataType>>;\n  resetScores: (event: React.MouseEvent<HTMLButtonElement>) => void;\n  setChartOpen: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst ScoreBoard = ({ scores, resetScores, setScores, setChartOpen }: ScoreBoardType) => {\n  const hasBlankScore: boolean = Object.values(scores).filter((score) => score === 0).length > 0;\n\n  const openChart = () => {\n    setChartOpen(true);\n  };\n\n  return (\n    <div>\n      <ScoreTable>\n        <span>Student</span>\n        <span>Score</span>\n        {Object.keys(scores).map((student) => (\n          <Input key={student} name={student} score={scores[student]} setScores={setScores} />\n        ))}\n      </ScoreTable>\n      <ControlBox>\n        <button disabled={hasBlankScore} onClick={openChart}>\n          Make Chart\n        </button>\n        <button onClick={resetScores}>Reset Data</button>\n      </ControlBox>\n    </div>\n  );\n};\n\nexport default ScoreBoard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}