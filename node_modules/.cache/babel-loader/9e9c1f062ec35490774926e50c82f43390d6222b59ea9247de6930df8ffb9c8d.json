{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/runner/work/challenges/challenges/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2;import styled from'styled-components';import{useState}from'react';import{KEYS,MIN_INPUT_LENGTH,INIT_VALUE,KEY}from'../../constants/calculator';import Keyboard from'./Keyboard';import{calcPostFix,convertInfixToPostfix,getPointer,isNumber,isOperator}from'../../utils/calculator/calc';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const StyledCalculator=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-rows: 0.4fr;\\n  width: 300px;\\n  height: 500px;\\n  border: 1px solid black;\\n  border-radius: 8px;\\n  font-family: fantasy;\\n  font-size: larger;\\n\"])));const Monitor=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  border-bottom: 1px solid black;\\n  padding: 0 14px;\\n\\n  .history {\\n    color: gray;\\n  }\\n\"])));const Calculator=()=>{const[input,setInput]=useState([]);const[result,setResult]=useState();const[history,setHistory]=useState('');const[openBracket,setOpenBracket]=useState(INIT_VALUE);const isFirstInput=input.length===MIN_INPUT_LENGTH;const prevInput=input.at(-1);const initCalculator=()=>{setInput([]);setResult(INIT_VALUE);setHistory('');setOpenBracket(INIT_VALUE);};const addInput=newInput=>{setInput(prev=>[...prev,newInput]);};const replaceLastInput=newInput=>{setInput(prev=>{return prev.map((e,i)=>{if(i===prev.length-1){return newInput;}return e;});});};const calcExpression=expression=>{const postFix=convertInfixToPostfix(expression);const calcResult=calcPostFix(postFix);setHistory(expression.join(' '));setResult(calcResult);setInput([]);};const clearResult=()=>{if(result){setResult(0);}};const handleKeyboardClick=_ref=>{let{target}=_ref;if(!(target instanceof HTMLButtonElement))return;const{key}=target.dataset;if(!key)return;clearResult();if(key===KEY.CLEAR){initCalculator();return;}if(key===KEY.EQUAL){if(openBracket){setResult('수식 오류');return;}calcExpression(input);return;}const validateFirstInput=isNumber(key)||key===KEY.MINUS||key===KEY.POINT||key===KEY.OPEN_BRACKET||key===KEY.CLOSE_BRACKET;if(isFirstInput&&!validateFirstInput){return;}if(key===KEY.POINT){// 첫 입력값이거나 앞이 부호면 0. 추가\nif(isFirstInput||isOperator(prevInput)){addInput(getPointer(''));}// 소수점은 앞이 숫자면 숫자의 맨 뒤에 소수점을 붙이거나 이미 소수점이 붙은 경우 생략한다.\nelse if(isNumber(prevInput)){replaceLastInput(getPointer(prevInput));}return;}if(key===KEY.OPEN_BRACKET){addInput(key);setOpenBracket(prev=>prev+1);return;}if(key===KEY.CLOSE_BRACKET&&openBracket){addInput(key);setOpenBracket(prev=>prev-1);return;}if(isOperator(key)){if(isNumber(prevInput)||key===KEY.MINUS||prevInput===KEY.CLOSE_BRACKET){addInput(key);}// 연산자 연속 중복 제거\nelse if(isOperator(prevInput)){replaceLastInput(key);}// 첫 입력값이 -이거나 닫힌 브라켓이거나 연산자 앞이 숫자면 추가\nreturn;}if(isNumber(key)){// - 숫자로 치환\nif(prevInput===KEY.MINUS){replaceLastInput(Number(\"\".concat(KEY.MINUS).concat(key)));}// 첫 입력값이거나 앞이 부호일 때 새로 추가\nelse if(isFirstInput||isOperator(prevInput)){addInput(Number(key));}// 앞이 숫자면 합친다.\nelse if(isNumber(prevInput)){replaceLastInput(Number(\"\".concat(prevInput).concat(key)));}}};return/*#__PURE__*/_jsxs(StyledCalculator,{children:[/*#__PURE__*/_jsxs(Monitor,{children:[/*#__PURE__*/_jsx(\"p\",{className:\"history\",children:history}),/*#__PURE__*/_jsx(\"p\",{className:\"input\",children:result||input.join(' ')||INIT_VALUE})]}),/*#__PURE__*/_jsx(Keyboard,{keys:KEYS,handleKeyboardClick:handleKeyboardClick})]});};export default Calculator;","map":{"version":3,"names":["styled","useState","KEYS","MIN_INPUT_LENGTH","INIT_VALUE","KEY","Keyboard","calcPostFix","convertInfixToPostfix","getPointer","isNumber","isOperator","jsx","_jsx","jsxs","_jsxs","StyledCalculator","div","_templateObject","_taggedTemplateLiteral","Monitor","_templateObject2","Calculator","input","setInput","result","setResult","history","setHistory","openBracket","setOpenBracket","isFirstInput","length","prevInput","at","initCalculator","addInput","newInput","prev","replaceLastInput","map","e","i","calcExpression","expression","postFix","calcResult","join","clearResult","handleKeyboardClick","_ref","target","HTMLButtonElement","key","dataset","CLEAR","EQUAL","validateFirstInput","MINUS","POINT","OPEN_BRACKET","CLOSE_BRACKET","Number","concat","children","className","keys"],"sources":["/home/runner/work/challenges/challenges/src/components/calculator/Calculator.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { useState } from 'react';\nimport { KEYS, MIN_INPUT_LENGTH, INIT_VALUE, KEY } from '../../constants/calculator';\nimport Keyboard from './Keyboard';\nimport { calcPostFix, convertInfixToPostfix, getPointer, isNumber, isOperator } from '../../utils/calculator/calc';\n\nconst StyledCalculator = styled.div`\n  display: grid;\n  grid-template-rows: 0.4fr;\n  width: 300px;\n  height: 500px;\n  border: 1px solid black;\n  border-radius: 8px;\n  font-family: fantasy;\n  font-size: larger;\n`;\n\nconst Monitor = styled.div`\n  border-bottom: 1px solid black;\n  padding: 0 14px;\n\n  .history {\n    color: gray;\n  }\n`;\n\ntype HandleKeyboardClick = Pick<MouseEvent, 'target'>;\n\nconst Calculator = () => {\n  const [input, setInput] = useState<(number | string)[]>([]);\n  const [result, setResult] = useState<number | string>();\n  const [history, setHistory] = useState<string>('');\n  const [openBracket, setOpenBracket] = useState<number>(INIT_VALUE);\n\n  const isFirstInput = input.length === MIN_INPUT_LENGTH;\n  const prevInput = input.at(-1)!;\n\n  const initCalculator = () => {\n    setInput([]);\n    setResult(INIT_VALUE);\n    setHistory('');\n    setOpenBracket(INIT_VALUE);\n  };\n\n  const addInput = (newInput: number | string) => {\n    setInput((prev) => [...prev, newInput]);\n  };\n\n  const replaceLastInput = (newInput: number | string) => {\n    setInput((prev) => {\n      return prev.map((e, i) => {\n        if (i === prev.length - 1) {\n          return newInput;\n        }\n        return e;\n      });\n    });\n  };\n\n  const calcExpression = (expression: (number | string)[]) => {\n    const postFix = convertInfixToPostfix(expression);\n    const calcResult = calcPostFix(postFix);\n\n    setHistory(expression.join(' '));\n    setResult(calcResult);\n    setInput([]);\n  };\n\n  const clearResult = () => {\n    if (result) {\n      setResult(0);\n    }\n  };\n\n  const handleKeyboardClick = ({ target }: HandleKeyboardClick) => {\n    if (!(target instanceof HTMLButtonElement)) return;\n    const { key } = target.dataset;\n    if (!key) return;\n    clearResult();\n\n    if (key === KEY.CLEAR) {\n      initCalculator();\n      return;\n    }\n\n    if (key === KEY.EQUAL) {\n      if (openBracket) {\n        setResult('수식 오류');\n        return;\n      }\n      calcExpression(input);\n      return;\n    }\n\n    const validateFirstInput =\n      isNumber(key) || key === KEY.MINUS || key === KEY.POINT || key === KEY.OPEN_BRACKET || key === KEY.CLOSE_BRACKET;\n\n    if (isFirstInput && !validateFirstInput) {\n      return;\n    }\n\n    if (key === KEY.POINT) {\n      // 첫 입력값이거나 앞이 부호면 0. 추가\n      if (isFirstInput || isOperator(prevInput)) {\n        addInput(getPointer(''));\n      } // 소수점은 앞이 숫자면 숫자의 맨 뒤에 소수점을 붙이거나 이미 소수점이 붙은 경우 생략한다.\n      else if (isNumber(prevInput)) {\n        replaceLastInput(getPointer(prevInput));\n      }\n      return;\n    }\n\n    if (key === KEY.OPEN_BRACKET) {\n      addInput(key);\n      setOpenBracket((prev) => prev + 1);\n      return;\n    }\n\n    if (key === KEY.CLOSE_BRACKET && openBracket) {\n      addInput(key);\n      setOpenBracket((prev) => prev - 1);\n      return;\n    }\n\n    if (isOperator(key)) {\n      if (isNumber(prevInput) || key === KEY.MINUS || prevInput === KEY.CLOSE_BRACKET) {\n        addInput(key);\n      }\n      // 연산자 연속 중복 제거\n      else if (isOperator(prevInput)) {\n        replaceLastInput(key);\n      } // 첫 입력값이 -이거나 닫힌 브라켓이거나 연산자 앞이 숫자면 추가\n\n      return;\n    }\n\n    if (isNumber(key)) {\n      // - 숫자로 치환\n      if (prevInput === KEY.MINUS) {\n        replaceLastInput(Number(`${KEY.MINUS}${key}`));\n      } // 첫 입력값이거나 앞이 부호일 때 새로 추가\n      else if (isFirstInput || isOperator(prevInput)) {\n        addInput(Number(key));\n      } // 앞이 숫자면 합친다.\n      else if (isNumber(prevInput)) {\n        replaceLastInput(Number(`${prevInput}${key}`));\n      }\n    }\n  };\n\n  return (\n    <StyledCalculator>\n      <Monitor>\n        <p className=\"history\">{history}</p>\n        <p className=\"input\">{result || input.join(' ') || INIT_VALUE}</p>\n      </Monitor>\n      <Keyboard keys={KEYS} handleKeyboardClick={handleKeyboardClick} />\n    </StyledCalculator>\n  );\n};\n\nexport default Calculator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}