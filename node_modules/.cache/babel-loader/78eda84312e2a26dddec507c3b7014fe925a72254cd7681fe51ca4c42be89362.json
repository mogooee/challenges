{"ast":null,"code":"import{useState,useRef}from'react';import{TIMER}from'../../constants/digital-clock';import{getTens,getUnits}from'../../utils/digital-clock/calcUnit';const useTimer=()=>{const[timer,setTimer]=useState(0);const timerId=useRef(null);const startTimer=()=>{if(timerId.current)return;timerId.current=setInterval(()=>{if(timer>TIMER.MAX_MINUTE*TIMER.PER_MINUTE_SEC+TIMER.MAX_SEC){setTimer(TIMER.INIT);}else{setTimer(prev=>prev+=TIMER.SEC);}},1000);};const pauseTimer=()=>{if(!timerId.current)return;clearInterval(timerId.current);timerId.current=null;};const resetTimer=()=>{if(timerId.current){clearInterval(timerId.current);}setTimer(TIMER.INIT);timerId.current=null;};const timerRadio=[{title:'start',onClick:startTimer},{title:'paused',onClick:pauseTimer},{title:'reset',onClick:resetTimer}];const minute1=getTens(timer/TIMER.PER_MINUTE_SEC);const minute2=getUnits(timer/TIMER.PER_MINUTE_SEC);const sec1=getTens(timer%TIMER.PER_MINUTE_SEC);const sec2=getUnits(timer%TIMER.PER_MINUTE_SEC);const flicker=sec2%2;return{time:{minute1,minute2,sec1,sec2},flicker,timerRadio,resetTimer};};export default useTimer;","map":{"version":3,"names":["useState","useRef","TIMER","getTens","getUnits","useTimer","timer","setTimer","timerId","startTimer","current","setInterval","MAX_MINUTE","PER_MINUTE_SEC","MAX_SEC","INIT","prev","SEC","pauseTimer","clearInterval","resetTimer","timerRadio","title","onClick","minute1","minute2","sec1","sec2","flicker","time"],"sources":["/home/runner/work/challenges/challenges/src/hooks/digital-clock/useTimer.ts"],"sourcesContent":["import { useState, useRef } from 'react';\nimport { TIMER } from '../../constants/digital-clock';\nimport { RadioData } from '../../components/digital-clock/RadioButton';\nimport { getTens, getUnits } from '../../utils/digital-clock/calcUnit';\n\nconst useTimer = () => {\n  const [timer, setTimer] = useState<number>(0);\n  const timerId = useRef<ReturnType<typeof setInterval> | null>(null);\n\n  const startTimer = () => {\n    if (timerId.current) return;\n    timerId.current = setInterval(() => {\n      if (timer > TIMER.MAX_MINUTE * TIMER.PER_MINUTE_SEC + TIMER.MAX_SEC) {\n        setTimer(TIMER.INIT);\n      } else {\n        setTimer((prev) => (prev += TIMER.SEC));\n      }\n    }, 1000);\n  };\n\n  const pauseTimer = () => {\n    if (!timerId.current) return;\n    clearInterval(timerId.current);\n    timerId.current = null;\n  };\n\n  const resetTimer = () => {\n    if (timerId.current) {\n      clearInterval(timerId.current);\n    }\n    setTimer(TIMER.INIT);\n    timerId.current = null;\n  };\n\n  const timerRadio: RadioData[] = [\n    { title: 'start', onClick: startTimer },\n    { title: 'paused', onClick: pauseTimer },\n    { title: 'reset', onClick: resetTimer },\n  ];\n\n  const minute1 = getTens(timer / TIMER.PER_MINUTE_SEC);\n  const minute2 = getUnits(timer / TIMER.PER_MINUTE_SEC);\n  const sec1 = getTens(timer % TIMER.PER_MINUTE_SEC);\n  const sec2 = getUnits(timer % TIMER.PER_MINUTE_SEC);\n  const flicker = sec2 % 2;\n\n  return { time: { minute1, minute2, sec1, sec2 }, flicker, timerRadio, resetTimer };\n};\n\nexport default useTimer;\n"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,MAAM,KAAQ,OAAO,CACxC,OAASC,KAAK,KAAQ,+BAA+B,CAErD,OAASC,OAAO,CAAEC,QAAQ,KAAQ,oCAAoC,CAEtE,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CACrB,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGP,QAAQ,CAAS,CAAC,CAAC,CAC7C,KAAM,CAAAQ,OAAO,CAAGP,MAAM,CAAwC,IAAI,CAAC,CAEnE,KAAM,CAAAQ,UAAU,CAAGA,CAAA,GAAM,CACvB,GAAID,OAAO,CAACE,OAAO,CAAE,OACrBF,OAAO,CAACE,OAAO,CAAGC,WAAW,CAAC,IAAM,CAClC,GAAIL,KAAK,CAAGJ,KAAK,CAACU,UAAU,CAAGV,KAAK,CAACW,cAAc,CAAGX,KAAK,CAACY,OAAO,CAAE,CACnEP,QAAQ,CAACL,KAAK,CAACa,IAAI,CAAC,CACtB,CAAC,IAAM,CACLR,QAAQ,CAAES,IAAI,EAAMA,IAAI,EAAId,KAAK,CAACe,GAAI,CAAC,CACzC,CACF,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CAED,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACvB,GAAI,CAACV,OAAO,CAACE,OAAO,CAAE,OACtBS,aAAa,CAACX,OAAO,CAACE,OAAO,CAAC,CAC9BF,OAAO,CAACE,OAAO,CAAG,IAAI,CACxB,CAAC,CAED,KAAM,CAAAU,UAAU,CAAGA,CAAA,GAAM,CACvB,GAAIZ,OAAO,CAACE,OAAO,CAAE,CACnBS,aAAa,CAACX,OAAO,CAACE,OAAO,CAAC,CAChC,CACAH,QAAQ,CAACL,KAAK,CAACa,IAAI,CAAC,CACpBP,OAAO,CAACE,OAAO,CAAG,IAAI,CACxB,CAAC,CAED,KAAM,CAAAW,UAAuB,CAAG,CAC9B,CAAEC,KAAK,CAAE,OAAO,CAAEC,OAAO,CAAEd,UAAW,CAAC,CACvC,CAAEa,KAAK,CAAE,QAAQ,CAAEC,OAAO,CAAEL,UAAW,CAAC,CACxC,CAAEI,KAAK,CAAE,OAAO,CAAEC,OAAO,CAAEH,UAAW,CAAC,CACxC,CAED,KAAM,CAAAI,OAAO,CAAGrB,OAAO,CAACG,KAAK,CAAGJ,KAAK,CAACW,cAAc,CAAC,CACrD,KAAM,CAAAY,OAAO,CAAGrB,QAAQ,CAACE,KAAK,CAAGJ,KAAK,CAACW,cAAc,CAAC,CACtD,KAAM,CAAAa,IAAI,CAAGvB,OAAO,CAACG,KAAK,CAAGJ,KAAK,CAACW,cAAc,CAAC,CAClD,KAAM,CAAAc,IAAI,CAAGvB,QAAQ,CAACE,KAAK,CAAGJ,KAAK,CAACW,cAAc,CAAC,CACnD,KAAM,CAAAe,OAAO,CAAGD,IAAI,CAAG,CAAC,CAExB,MAAO,CAAEE,IAAI,CAAE,CAAEL,OAAO,CAAEC,OAAO,CAAEC,IAAI,CAAEC,IAAK,CAAC,CAAEC,OAAO,CAAEP,UAAU,CAAED,UAAW,CAAC,CACpF,CAAC,CAED,cAAe,CAAAf,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}