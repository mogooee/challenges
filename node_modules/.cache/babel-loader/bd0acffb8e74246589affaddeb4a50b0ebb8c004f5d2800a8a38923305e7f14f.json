{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/runner/work/challenges/challenges/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import styled from'styled-components';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const StyledToggleBtn=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 100px;\\n  position: relative;\\n\\n  label {\\n    width: 80px;\\n    position: absolute;\\n    top: -11px;\\n    right: -2px;\\n    border: 1px solid black;\\n    border-radius: 8px;\\n    padding: 20px;\\n    cursor: pointer;\\n  }\\n\\n  input {\\n    cursor: pointer;\\n    position: relative;\\n    left: 0;\\n    appearance: none;\\n    transition: all 0.2s ease-out;\\n    transform: translateX(0px);\\n\\n    &:checked {\\n      left: 22px;\\n    }\\n  }\\n\\n  input::before {\\n    border: 1px solid lightgray;\\n    border-radius: 8px;\\n    padding: 10px;\\n    content: \",\";\\n  }\\n\"])),_ref=>{let{mode}=_ref;return\"\\\"\".concat(mode,\"\\\"\");});const ToggleBtn=_ref2=>{let{mode,onClick}=_ref2;return/*#__PURE__*/_jsxs(StyledToggleBtn,{mode:mode,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"toggle-btn\"}),/*#__PURE__*/_jsx(\"input\",{id:\"toggle-btn\",type:\"checkbox\",onClick:onClick})]});};export default ToggleBtn;","map":{"version":3,"names":["styled","jsx","_jsx","jsxs","_jsxs","StyledToggleBtn","div","_templateObject","_taggedTemplateLiteral","_ref","mode","concat","ToggleBtn","_ref2","onClick","children","htmlFor","id","type"],"sources":["/home/runner/work/challenges/challenges/src/components/producing-chart/ToggleBtn.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { ChartModeType } from './Chart';\n\nconst StyledToggleBtn = styled.div<{ mode: ChartModeType }>`\n  width: 100px;\n  position: relative;\n\n  label {\n    width: 80px;\n    position: absolute;\n    top: -11px;\n    right: -2px;\n    border: 1px solid black;\n    border-radius: 8px;\n    padding: 20px;\n    cursor: pointer;\n  }\n\n  input {\n    cursor: pointer;\n    position: relative;\n    left: 0;\n    appearance: none;\n    transition: all 0.2s ease-out;\n    transform: translateX(0px);\n\n    &:checked {\n      left: 22px;\n    }\n  }\n\n  input::before {\n    border: 1px solid lightgray;\n    border-radius: 8px;\n    padding: 10px;\n    content: ${({ mode }) => `\"${mode}\"`};\n  }\n`;\n\ninterface ToggleBtnType {\n  mode: ChartModeType;\n  onClick: (event: React.MouseEvent<HTMLInputElement>) => void;\n}\n\nconst ToggleBtn = ({ mode, onClick }: ToggleBtnType) => {\n  return (\n    <StyledToggleBtn mode={mode}>\n      <label htmlFor=\"toggle-btn\"></label>\n      <input id=\"toggle-btn\" type=\"checkbox\" onClick={onClick}></input>\n    </StyledToggleBtn>\n  );\n};\n\nexport default ToggleBtn;\n"],"mappings":"iKAAA,MAAO,CAAAA,MAAM,KAAM,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAGvC,KAAM,CAAAC,eAAe,CAAGL,MAAM,CAACM,GAAG,CAAAC,eAAA,GAAAA,eAAA,CAAAC,sBAAA,ukBAgCnBC,IAAA,MAAC,CAAEC,IAAK,CAAC,CAAAD,IAAA,YAAAE,MAAA,CAASD,IAAI,QAAG,CAEvC,CAOD,KAAM,CAAAE,SAAS,CAAGC,KAAA,EAAsC,IAArC,CAAEH,IAAI,CAAEI,OAAuB,CAAC,CAAAD,KAAA,CACjD,mBACET,KAAA,CAACC,eAAe,EAACK,IAAI,CAAEA,IAAK,CAAAK,QAAA,eAC1Bb,IAAA,UAAOc,OAAO,CAAC,YAAY,CAAQ,CAAC,cACpCd,IAAA,UAAOe,EAAE,CAAC,YAAY,CAACC,IAAI,CAAC,UAAU,CAACJ,OAAO,CAAEA,OAAQ,CAAQ,CAAC,EAClD,CAAC,CAEtB,CAAC,CAED,cAAe,CAAAF,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}