{"ast":null,"code":"import{useState}from'react';import{getTens,getUnits}from'../../utils/digital-clock/calcUnit';const useClock=()=>{const[mode,setMode]=useState('12-HOUR');const[clock,setClock]=useState({hour:new Date().getHours(),minute:new Date().getMinutes(),sec:new Date().getSeconds()});const startClock=()=>{const date=new Date();setClock({hour:date.getHours(),minute:date.getMinutes(),sec:date.getSeconds()});};const switch12HourMode=()=>{setMode('12-HOUR');};const switch24HourMode=()=>{setMode('24-HOUR');};const clockRadio=[{title:'12',checked:true,onClick:switch12HourMode},{title:'24',checked:false,onClick:switch24HourMode}];const meridiem=clock.hour<12?'AM':'PM';const hour1=getTens(mode==='12-HOUR'&&clock.hour>12?clock.hour-12:clock.hour);const hour2=getUnits(mode==='12-HOUR'&&clock.hour>12?clock.hour-12:clock.hour);const minute1=getTens(clock.minute);const minute2=getUnits(clock.minute);const flicker=clock.sec%2;return{mode,time:{hour1,hour2,minute1,minute2,meridiem},flicker,clockRadio,startClock};};export default useClock;","map":{"version":3,"names":["useState","getTens","getUnits","useClock","mode","setMode","clock","setClock","hour","Date","getHours","minute","getMinutes","sec","getSeconds","startClock","date","switch12HourMode","switch24HourMode","clockRadio","title","checked","onClick","meridiem","hour1","hour2","minute1","minute2","flicker","time"],"sources":["/home/runner/work/challenges/challenges/src/hooks/digital-clock/useClock.ts"],"sourcesContent":["import { useState } from 'react';\nimport { RadioData } from '../../components/digital-clock/RadioButton';\nimport { getTens, getUnits } from '../../utils/digital-clock/calcUnit';\n\ninterface Clock {\n  hour: number;\n  minute: number;\n  sec: number;\n}\n\ntype ClockMode = '12-HOUR' | '24-HOUR';\n\nconst useClock = () => {\n  const [mode, setMode] = useState<ClockMode>('12-HOUR');\n  const [clock, setClock] = useState<Clock>({\n    hour: new Date().getHours(),\n    minute: new Date().getMinutes(),\n    sec: new Date().getSeconds(),\n  });\n\n  const startClock = () => {\n    const date = new Date();\n    setClock({ hour: date.getHours(), minute: date.getMinutes(), sec: date.getSeconds() });\n  };\n\n  const switch12HourMode = () => {\n    setMode('12-HOUR');\n  };\n\n  const switch24HourMode = () => {\n    setMode('24-HOUR');\n  };\n\n  const clockRadio: RadioData[] = [\n    {\n      title: '12',\n      checked: true,\n      onClick: switch12HourMode,\n    },\n    {\n      title: '24',\n      checked: false,\n      onClick: switch24HourMode,\n    },\n  ];\n\n  const meridiem = clock.hour < 12 ? 'AM' : 'PM';\n  const hour1 = getTens(mode === '12-HOUR' && clock.hour > 12 ? clock.hour - 12 : clock.hour);\n  const hour2 = getUnits(mode === '12-HOUR' && clock.hour > 12 ? clock.hour - 12 : clock.hour);\n  const minute1 = getTens(clock.minute);\n  const minute2 = getUnits(clock.minute);\n  const flicker = clock.sec % 2;\n\n  return { mode, time: { hour1, hour2, minute1, minute2, meridiem }, flicker, clockRadio, startClock };\n};\n\nexport default useClock;\n"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,OAAO,CAEhC,OAASC,OAAO,CAAEC,QAAQ,KAAQ,oCAAoC,CAUtE,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CACrB,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGL,QAAQ,CAAY,SAAS,CAAC,CACtD,KAAM,CAACM,KAAK,CAAEC,QAAQ,CAAC,CAAGP,QAAQ,CAAQ,CACxCQ,IAAI,CAAE,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAC3BC,MAAM,CAAE,GAAI,CAAAF,IAAI,CAAC,CAAC,CAACG,UAAU,CAAC,CAAC,CAC/BC,GAAG,CAAE,GAAI,CAAAJ,IAAI,CAAC,CAAC,CAACK,UAAU,CAAC,CAC7B,CAAC,CAAC,CAEF,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACvB,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAP,IAAI,CAAC,CAAC,CACvBF,QAAQ,CAAC,CAAEC,IAAI,CAAEQ,IAAI,CAACN,QAAQ,CAAC,CAAC,CAAEC,MAAM,CAAEK,IAAI,CAACJ,UAAU,CAAC,CAAC,CAAEC,GAAG,CAAEG,IAAI,CAACF,UAAU,CAAC,CAAE,CAAC,CAAC,CACxF,CAAC,CAED,KAAM,CAAAG,gBAAgB,CAAGA,CAAA,GAAM,CAC7BZ,OAAO,CAAC,SAAS,CAAC,CACpB,CAAC,CAED,KAAM,CAAAa,gBAAgB,CAAGA,CAAA,GAAM,CAC7Bb,OAAO,CAAC,SAAS,CAAC,CACpB,CAAC,CAED,KAAM,CAAAc,UAAuB,CAAG,CAC9B,CACEC,KAAK,CAAE,IAAI,CACXC,OAAO,CAAE,IAAI,CACbC,OAAO,CAAEL,gBACX,CAAC,CACD,CACEG,KAAK,CAAE,IAAI,CACXC,OAAO,CAAE,KAAK,CACdC,OAAO,CAAEJ,gBACX,CAAC,CACF,CAED,KAAM,CAAAK,QAAQ,CAAGjB,KAAK,CAACE,IAAI,CAAG,EAAE,CAAG,IAAI,CAAG,IAAI,CAC9C,KAAM,CAAAgB,KAAK,CAAGvB,OAAO,CAACG,IAAI,GAAK,SAAS,EAAIE,KAAK,CAACE,IAAI,CAAG,EAAE,CAAGF,KAAK,CAACE,IAAI,CAAG,EAAE,CAAGF,KAAK,CAACE,IAAI,CAAC,CAC3F,KAAM,CAAAiB,KAAK,CAAGvB,QAAQ,CAACE,IAAI,GAAK,SAAS,EAAIE,KAAK,CAACE,IAAI,CAAG,EAAE,CAAGF,KAAK,CAACE,IAAI,CAAG,EAAE,CAAGF,KAAK,CAACE,IAAI,CAAC,CAC5F,KAAM,CAAAkB,OAAO,CAAGzB,OAAO,CAACK,KAAK,CAACK,MAAM,CAAC,CACrC,KAAM,CAAAgB,OAAO,CAAGzB,QAAQ,CAACI,KAAK,CAACK,MAAM,CAAC,CACtC,KAAM,CAAAiB,OAAO,CAAGtB,KAAK,CAACO,GAAG,CAAG,CAAC,CAE7B,MAAO,CAAET,IAAI,CAAEyB,IAAI,CAAE,CAAEL,KAAK,CAAEC,KAAK,CAAEC,OAAO,CAAEC,OAAO,CAAEJ,QAAS,CAAC,CAAEK,OAAO,CAAET,UAAU,CAAEJ,UAAW,CAAC,CACtG,CAAC,CAED,cAAe,CAAAZ,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}